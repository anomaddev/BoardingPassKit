name: Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on any tag starting with 'v' (e.g., v1.0.0, v2.1.3)
    branches:
      - main  # Only trigger when tags are pushed to main branch

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper tagging
    
    - name: Set up Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: "5.9"  # Use a stable Swift version
    
    - name: Verify Swift Package builds
      run: swift build
    
    - name: Run tests
      run: swift test
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Generate changelog from git log
        if [ "$TAG_NAME" = "v2.0.0" ]; then
          # For major releases, get all commits since the last major version
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --grep="^feat\|^fix\|^docs\|^refactor\|^test" --since="2024-01-01" | head -20)
        else
          # For patch/minor releases, get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --grep="^feat\|^fix\|^docs\|^refactor\|^test" $PREVIOUS_TAG..HEAD | head -20)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --grep="^feat\|^fix\|^docs\|^refactor\|^test" -10)
          fi
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## What's New in $TAG_NAME
        
        ### Changes
        $CHANGELOG
        
        ### Installation
        
        **Swift Package Manager:**
        \`\`\`swift
        dependencies: [
            .package(url: "https://github.com/anomaddev/BoardingPassKit.git", from: "$TAG_NAME")
        ]
        \`\`\`
        
        **CocoaPods:**
        \`\`\`ruby
        pod 'BoardingPassKit', '~> $TAG_NAME'
        \`\`\`
        
        ### Documentation
        - [API Documentation](https://github.com/anomaddev/BoardingPassKit/tree/main/docs)
        - [Migration Guide](https://github.com/anomaddev/BoardingPassKit#migration-guide)
        - [IATA Compliance](https://github.com/anomaddev/BoardingPassKit/blob/main/IATA_COMPLIANCE.md)
        EOF
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create and upload source archive
      run: |
        TAG_NAME=${{ steps.changelog.outputs.tag_name }}
        tar -czf BoardingPassKit-$TAG_NAME.tar.gz --exclude='.git' --exclude='.github' --exclude='*.xcworkspace' --exclude='*.xcodeproj' .
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.changelog.outputs.tag_name }}
        name: Release ${{ steps.changelog.outputs.tag_name }}
        body_path: release_notes.md
        files: |
          BoardingPassKit-${{ steps.changelog.outputs.tag_name }}.tar.gz
        draft: false
        prerelease: ${{ contains(steps.changelog.outputs.tag_name, 'beta') || contains(steps.changelog.outputs.tag_name, 'alpha') || contains(steps.changelog.outputs.tag_name, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
